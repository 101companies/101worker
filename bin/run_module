#!/usr/bin/env python3

import os
import sys
sys.path.append(os.path.abspath('.'))
sys.path.append(os.path.abspath('./libraries'))

import importlib

def onerror(func, path, exc_info):
    """
    Error handler for ``shutil.rmtree``.

    If the error is due to an access error (read only file)
    it attempts to add write permission and then retries.

    If the error is for another reason it re-raises the error.

    Usage : ``shutil.rmtree(path, onerror=onerror)``
    """
    import stat
    if not os.access(path, os.W_OK):
        # Is the error an access error ?
        os.chmod(path, stat.S_IWUSR)
        func(path)
    else:
        raise
        
m = 'modules.' + sys.argv[1]
module = importlib.import_module(m)

os.environ['FULL_SWEEP'] = '1'
os.environ['OMIT_GITDEPS'] = '1'
os.environ['OMIT_PULL'] = '1'

modules = [
    module
]

import worker_lib
import shutil

d = os.path.abspath('../101test')
if os.path.exists(d):
    shutil.rmtree(d,onerror=onerror)
    os.makedirs(d)

with open('config/test_folders.txt') as f:
    folders = f.read()

folders = filter(bool, folders.split('\n'))
for f in folders:
    shutil.copytree(os.path.join(worker_lib.env.get('repo101dir'), f), os.path.join(d, f))

worker_lib.env['repo101dir'] = d

worker_lib.runner.run(modules, worker_lib.env)