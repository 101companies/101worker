Functional style syntax:

ClassAssertion( :Entity owl:Class )

SubClassOf ( :Language :Entity )
SubClassOf ( :Technology :Entity )
SubClassOf ( :Concept :Entity )
DisjointClasses ( :Language :Technology :Concept ... )

-----------------------------------------------------------

Turtle syntax:

onto:Entity rdf:type owl:Class .

onto:Language rdfs:subClassOf onto:Entity .
onto:Technology rdfs:subClassOf onto:Entity .
onto:Concept rdfs:subClassOf onto:Entity .

[] a owl:AllDisjointClasses;
owl:members ( onto:Language onto:Technology onto:Concept ) .

-------------------------------------------------------------

RDF/XML syntax:

<rdf:RDF ...>

<rdf:Description rdf:about="http://...#Entity">
<rdf:type rdf:resource="http://...#Class"/>
</rdf:Description>

<rdf:Description rdf:about="http://...#Language">
<rdfs:subClassOf rdf:resource="http://...#Entity"/>
</rdf:Description>

<rdf:Description rdf:about="http://...#Technology">
<rdfs:subClassOf rdf:resource="http://...#Entity"/>
</rdf:Description>

<rdf:Description rdf:about="http://...#Concept">
<rdfs:subClassOf rdf:resource="http://...#Entity"/>
</rdf:Description>

<owl:AllDisjointClasses>
<owl:members rdf:parseType="Collection">
<owl:class rdf:about="http://...#Language"/>
<owl:class rdf:about="http://...#Technology"/>
<owl:class rdf:about="http://...#Concept"/>
</owl:members>
</owl:AllDisjointClasses>

</rdf:RDF>