{"content": "module Main where\n\nimport Company.Data\nimport Company.BX\nimport Company.Total\nimport Company.Cut\nimport Data.Foldable (toList)\n\nmain\n = do\n\n      -- De-serialize sample company via read\n      txt <- getContents\n      let company = read txt\n\n      -- Project to tree of floats\n      let tree = get company\n      print tree\n\n      -- Project further to list of floats\n      let list = toList tree\n      print list\n\n      -- Total all salaries\n      print $ total company\n\n      -- Cut all salaries\n      let company' = cut company\n\n      -- Total after cut\n      print $ total company'\n", "fragments": [{"resource": "http://worker.101companies.org/services/discovery/contributions/haskellTree/src/Main.hs/pattern/main", "name": "main"}], "github": "https://github.com/101companies/101haskell/tree/master/contributions/haskellTree/src/Main.hs", "geshi": "haskell"}