#!/usr/bin/perl
use strict;
use warnings;
use Cwd;
use File::Basename qw(dirname);
use File::Find;
use Pod::Usage;


pod2usage(-verbose => 99) if @ARGV;


my $cwd  = getcwd;
my $dir  = dirname $cwd;
my @make;

find sub {
    return if not $_ eq 'Makefile';
    my $code = system "make -nsf '$File::Find::name' test >/dev/null 2>&1";
    push @make, $File::Find::dir if $code == 0;
}, $cwd;


my %results;
my $length = 0;

for my $path (sort @make)
{
    chdir $path or die "Couldn't cd into $path";
    $path =~ s{^\Q$dir\E/?}{};

    print '-' x 70, "\n\nRunning make test for $path\n\n";
    my $exit_code = system qw(make -s test);
    print "\n";

    $results{$path} = $exit_code == 0 ? 'ok' : 'not ok';
    $length         = length $path if length $path > $length;
}


print '=' x 70, "\n\n";


for my $path (sort keys %results)
{
    my $dots = '.' x (2 + $length - length $path);
    print "$path $dots $results{$path}\n";
}

my $result = grep { /not ok/ } values %results;
print 'Result: ', ($result ? 'FAIL' : 'PASS'), "\n\n";
exit $result;


__END__

=head1 NAME

test - run all C<make test> in this repository

=head1 SYNOPSIS

You just do ./test and this script will run all make test targets it can find.
Then it'll report the overall okness of the tests.

The exit code is equal to the amount of make test targets that failed. Ideally,
this will be 0.

=cut
