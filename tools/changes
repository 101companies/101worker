#!/usr/bin/perl
use strict;
use warnings;
use Cwd qw(abs_path);
use File::Basename;
use File::Find;
use File::stat;
use JSON;

my $time = shift or die 'Usage: changes TIMESTAMP [PATH]';
my $path = abs_path(shift || dirname abs_path $0);
$path .= '/' if not $path =~ m{/$};

my %changes;

find(sub {
    my $file = $File::Find::name;

    return if not -f $file;
    return if $file =~ m{101logs/runner\.log$};

    my $s = stat($file) or warn "Can't stat $file: $!";

    if      ($s->mtime > $time) {
        push @{$changes{modified}}, substr $file, length $path;
    } elsif ($s->atime > $time) {
        push @{$changes{accessed}}, substr $file, length $path;
    }
}, $path);

print encode_json(\%changes), "\n";
